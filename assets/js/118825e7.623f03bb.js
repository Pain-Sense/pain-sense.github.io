"use strict";(self.webpackChunkpain_sense=self.webpackChunkpain_sense||[]).push([[262],{2223:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=n(4848),r=n(8453);const i={},a="Architecture",o={id:"Planning/zarchitecture",title:"Architecture",description:"System Architecture",source:"@site/docs/Planning/zarchitecture.md",sourceDirName:"Planning",slug:"/Planning/zarchitecture",permalink:"/docs/Planning/zarchitecture",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"projectSidebar",previous:{title:"Use cases",permalink:"/docs/Planning/use-cases"},next:{title:"Development",permalink:"/docs/category/development"}},l={},c=[{value:"System Architecture",id:"system-architecture",level:2},{value:"Simplified Data Flow",id:"simplified-data-flow",level:3},{value:"Technologies Used",id:"technologies-used",level:2},{value:"Message Layer",id:"message-layer",level:2},{value:"Processing",id:"processing",level:2},{value:"FrontEnd:",id:"frontend",level:2},{value:"Data Base",id:"data-base",level:2},{value:"Libraries Used:",id:"libraries-used",level:2},{value:"Sensors:",id:"sensors",level:2},{value:"Final Assembly;",id:"final-assembly",level:2}];function d(e){const s={a:"a",br:"br",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)("img",{src:"/img/architeture.png",alt:"A cute kitten"}),"\n",(0,t.jsx)(s.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,t.jsx)(s.p,{children:"The system architecture was designed based on the gathered requirements and consists of four main modules:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Data Generation:"}),(0,t.jsx)(s.br,{}),"\n","Simulates IoT devices and connects to a real ESP32 device."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Real-Time Analysis:"}),(0,t.jsx)(s.br,{}),"\n","Receives MQTT messages and visualizes the collected data in real time."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Data Processing:"}),(0,t.jsx)(s.br,{}),"\n","Acts as an intermediary to handle messages, performing noise reduction, feature extraction, and event detection."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Processed Data:"}),(0,t.jsx)(s.br,{}),"\n","Stores processed information and makes it available for visualization."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"simplified-data-flow",children:"Simplified Data Flow"}),"\n",(0,t.jsx)(s.p,{children:"Once the ESP32 device is configured, it sends MQTT messages to the broker. These messages are consumed by two main components:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Grafana"}),", which uses the data for real-time visualization."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Processing system"}),", which receives data via Kafka."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"In the processing system, Python scripts perform feature extraction. The extracted features are sent to a second Kafka topic and then stored in an InfluxDB database. Both raw and processed data are saved in this database and can be viewed in Grafana\u2019s frontend."}),"\n",(0,t.jsx)(s.h2,{id:"technologies-used",children:"Technologies Used"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"MQTT:"})," A lightweight protocol for real-time communication between IoT devices, used to transmit physiological sensor data."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Grafana:"})," A real-time visualization tool for monitoring physiological signals through customizable dashboards."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"InfluxDB:"})," A time-series database chosen to store physiological data with accurate timestamps."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"MySQL:"})," A relational database for structured data like patient information and experiment details."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Telegraf:"})," Bridges Kafka and InfluxDB, automatically sending processed data to the database."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Apache Kafka:"})," A scalable data streaming platform that ensures ordered message delivery and fault tolerance."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Python:"})," Used for writing scripts that process physiological signals, extracting key metrics like heart rate peaks."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Quarkus (Java):"})," A lightweight framework for developing REST APIs; manages data, communicates with MySQL, and provides extra features like tagging processed messages."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Docker & Docker Compose:"})," Tools to create isolated containers for each system component, simplifying setup, testing, and deployment."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"React:"})," A JavaScript library for building a modern, responsive, and interactive user interface for data visualization."]}),"\n"]}),"\n",(0,t.jsx)(s.h1,{id:"tech-stack",children:"Tech Stack:"}),"\n",(0,t.jsx)(s.h2,{id:"message-layer",children:"Message Layer"}),"\n",(0,t.jsxs)(s.p,{children:["kafka:",(0,t.jsx)(s.a,{href:"https://www.python.org/downloads/",children:"https://www.python.org/downloads/"})]}),"\n",(0,t.jsxs)(s.p,{children:["kafka-connect:",(0,t.jsx)(s.a,{href:"https://docs.confluent.io/platform/current/connect/index.html",children:"https://docs.confluent.io/platform/current/connect/index.html"})]}),"\n",(0,t.jsxs)(s.p,{children:["Mosquitto:",(0,t.jsx)(s.a,{href:"https://mosquitto.org/",children:"https://mosquitto.org/"})]}),"\n",(0,t.jsxs)(s.p,{children:["Telegraf:",(0,t.jsx)(s.a,{href:"https://www.influxdata.com/time-series-platform/telegraf/",children:"https://www.influxdata.com/time-series-platform/telegraf/"})]}),"\n",(0,t.jsx)(s.h2,{id:"processing",children:"Processing"}),"\n",(0,t.jsxs)(s.p,{children:["Quarkus:",(0,t.jsx)(s.a,{href:"https://quarkus.io/",children:"https://quarkus.io/"})]}),"\n",(0,t.jsxs)(s.p,{children:["Python3:",(0,t.jsx)(s.a,{href:"https://www.python.org/downloads/",children:"https://www.python.org/downloads/"})]}),"\n",(0,t.jsx)(s.h2,{id:"frontend",children:"FrontEnd:"}),"\n",(0,t.jsxs)(s.p,{children:["Typescript:",(0,t.jsx)(s.a,{href:"https://www.typescriptlang.org/",children:"https://www.typescriptlang.org/"})]}),"\n",(0,t.jsxs)(s.p,{children:["Grafana:",(0,t.jsx)(s.a,{href:"https://grafana.com/",children:"https://grafana.com/"})]}),"\n",(0,t.jsx)(s.h2,{id:"data-base",children:"Data Base"}),"\n",(0,t.jsxs)(s.p,{children:["InfluxDB:",(0,t.jsx)(s.a,{href:"https://www.influxdata.com/",children:"https://www.influxdata.com/"})]}),"\n",(0,t.jsxs)(s.p,{children:["MySql:",(0,t.jsx)(s.a,{href:"https://www.influxdata.com/time-series-platform/telegraf/",children:"https://www.influxdata.com/time-series-platform/telegraf/"})]}),"\n",(0,t.jsx)(s.h2,{id:"libraries-used",children:"Libraries Used:"}),"\n",(0,t.jsxs)(s.p,{children:["neurokit2:",(0,t.jsx)(s.a,{href:"https://github.com/neuropsychology/NeuroKit",children:"https://github.com/neuropsychology/NeuroKit"})]}),"\n",(0,t.jsx)(s.h1,{id:"esp32",children:"Esp32"}),"\n",(0,t.jsx)(s.p,{children:"For this project the esp32 used was the ESP32-Wroom-32D"}),"\n",(0,t.jsx)("img",{src:"/img/esp32_wroom_32D.jpg",alt:"A cute kitten"}),"\n",(0,t.jsx)(s.h2,{id:"sensors",children:"Sensors:"}),"\n",(0,t.jsxs)(s.p,{children:["PPG Sensor:",(0,t.jsx)(s.a,{href:"https://www.dfrobot.com/product-1540.html",children:"https://www.dfrobot.com/product-1540.html"})]}),"\n",(0,t.jsxs)(s.p,{children:["GSR Sensor:",(0,t.jsx)(s.a,{href:"https://www.digikey.pt/pt/products/detail/seeed-technology-co-ltd/101020052/5488086",children:"https://www.digikey.pt/pt/products/detail/seeed-technology-co-ltd/101020052/5488086"})]}),"\n",(0,t.jsxs)(s.p,{children:["RTC Module:",(0,t.jsx)(s.a,{href:"https://mauser.pt/catalog/product_info.php?products_id=096-8833",children:"https://mauser.pt/catalog/product_info.php?products_id=096-8833"})]}),"\n",(0,t.jsx)(s.p,{children:"A Breadboard and some cables will also be necessary for this project."}),"\n",(0,t.jsx)(s.h2,{id:"final-assembly",children:"Final Assembly;"}),"\n",(0,t.jsx)("img",{src:"/img/assemble.jpg",alt:"A cute kitten"})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var t=n(6540);const r={},i=t.createContext(r);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);